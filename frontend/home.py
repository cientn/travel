# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
import datetime
from pathlib import Path
from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Button, messagebox, NW, ttk
from tkcalendar import DateEntry, Calendar
from datetime import datetime, date
import tkinter as tk
from backend.controlbackend import airport, add_ticket, retrieve_ticket, searching
from middleware.ticket import Ticket


class Home:

    def __init__(self, root):
        self.button_image_1 = None
        self.image_image_2 = None
        self.image_image_1 = None
        self.root = root
        self.root.resizable(False, False)
        self.root.geometry("1200x800")
        self.root.configure(bg="#EBF2FA")
        self.root.title('Sign In Page')
        self.init_ui()

    def init_ui(self):
        # --------------------------------------------------------------------------------------------
        OUTPUT_PATH = Path(__file__).parent
        ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\chien\PycharmProjects\pythonProject\frontend\assets\frame2")

        def relative_to_assets(path: str) -> Path:
            return ASSETS_PATH / Path(path)

        # ----------------------------------------------------------------------------------------------------

        # -------------------------------------------------------------------------------
        canvas = Canvas(
            self.root,
            bg="#EBF2FA",
            height=800,
            width=1200,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )

        canvas.place(x=0, y=0)

        self.image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        canvas.create_image(
            170.0,
            47.0,
            image=self.image_image_1,
            anchor=NW,
        )

        self.image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        canvas.create_image(
            0.0,
            0.0,
            image=self.image_image_2,
            anchor=NW
        )

        # search
        # self.button_image_11 = PhotoImage(
        #     file=relative_to_assets("button_11.png"))
        # button_search = Button(
        #     image=self.button_image_11,
        #     borderwidth=0,
        #     highlightthickness=0,
        #     command=lambda: print("button_11 clicked"),
        #     relief="flat"
        # )
        # button_search.place(
        #     x=23.0,
        #     y=229.0,
        #     width=110.0,
        #     height=30.0
        # )

        # day2
        # self.button_image_2 = PhotoImage(
        #     file=relative_to_assets("button_2.png"))

        # Tạo trường nhập ngày bằng DataEntry của tkcalendar

        def up_date2(*args):
            return sl_day2.get()

        sl_day2 = StringVar()
        sl_day2.trace('w', up_date2)

        button_day2 = DateEntry(
            canvas,
            selectmode='day',
            on_select=up_date2(),
            textvariable=sl_day2,
            cursor='hand2'
        )
        button_day2.place(
            x=464.0,
            y=184.0,
            width=110.0,
            height=22.0
        )

        # day1
        def up_date1(*args):
            return sl_day1.get()

        sl_day1 = StringVar()
        sl_day1.trace('w', up_date1)

        # self.button_image_10 = PhotoImage(
        #     file=relative_to_assets("button_10.png"))
        button_day1 = DateEntry(
            canvas,
            selectmode='day',
            on_select=up_date1(),
            textvariable=sl_day1,
            cursor='hand2'
        )
        button_day1.place(
            x=239.0,
            y=184.0,
            width=110.0,
            height=22.0
        )
        #
        # self.button_image_14 = PhotoImage(
        #     file=relative_to_assets("button_14.png"))
        # button_14 = Button(
        #     image=self.button_image_14,
        #     borderwidth=0,
        #     highlightthickness=0,
        #     command=lambda: print("button_14 clicked"),
        #     relief="flat"
        # )
        # button_14.place(
        #     x=23.0,
        #     y=139.0,
        #     width=110.0,
        #     height=30.0
        # )

        # self.button_image_13 = PhotoImage(
        #     file=relative_to_assets("button_13.png"))
        # button_13 = Button(
        #     image=self.button_image_13,
        #     borderwidth=0,
        #     highlightthickness=0,
        #     command=lambda: print("button_13 clicked"),
        #     relief="flat"
        # )
        # button_13.place(
        #     x=23.0,
        #     y=184.0,
        #     width=110.0,
        #     height=30.0
        # )

        canvas.create_text(
            48.0,
            25.0,
            anchor="nw",
            text="Người dùng",
            fill="#FFFFFF",
            font=("SegoeUI Semibold", 15 * -1)
        )

        self.entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        canvas.create_image(
            524.0,
            242.0,
            image=self.entry_image_1
        )
        entry_baggage = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_baggage.place(
            x=468.0,
            y=231.0,
            width=112.0,
            height=20.0
        )

        self.entry_image_2 = PhotoImage(
            file=relative_to_assets("entry_2.png"))
        canvas.create_image(
            780.0,
            101.0,
            image=self.entry_image_2
        )
        entry_no = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_no.place(
            x=724.0,
            y=90.0,
            width=112.0,
            height=20.0
        )

        self.entry_image_3 = PhotoImage(
            file=relative_to_assets("entry_3.png"))
        canvas.create_image(
            780.0,
            195.0,
            image=self.entry_image_3
        )
        entry_num_flight = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_num_flight.place(
            x=724.0,
            y=184.0,
            width=112.0,
            height=20.0
        )

        self.entry_image_4 = PhotoImage(
            file=relative_to_assets("entry_4.png"))
        canvas.create_image(
            1056.0,
            101.0,
            image=self.entry_image_4
        )
        entry_gate = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_gate.place(
            x=1000.0,
            y=90.0,
            width=112.0,
            height=20.0
        )

        self.entry_image_5 = PhotoImage(
            file=relative_to_assets("entry_5.png"))
        canvas.create_image(
            435.5,
            101.0,
            image=self.entry_image_5
        )
        entry_passenger = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_passenger.place(
            x=243.0,
            y=90.0,
            width=385.0,
            height=20.0
        )

        self.entry_image_6 = PhotoImage(
            file=relative_to_assets("entry_6.png"))
        canvas.create_image(
            299.0,
            242.0,
            image=self.entry_image_6
        )
        entry_seat = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_seat.place(
            x=243.0,
            y=231.0,
            width=112.0,
            height=20.0
        )

        # ----------------------------------------------------------------------------
        canvas.create_text(
            676.0,
            91.5,
            anchor="nw",
            text="SỐ VÉ",
            fill="#27292A",
            font=("Segoe UI Semibold", 13 * -1)
        )

        canvas.create_text(
            674.0,
            138.5,
            anchor="nw",
            text="HẠNG",
            fill="#27292A",
            font=("Segoe UI Semibold", 13 * -1)
        )

        canvas.create_text(
            661.0,
            185.5,
            anchor="nw",
            text="CHUYẾN",
            fill="#27292A",
            font=("Segoe UI Semibold", 13 * -1)
        )

        canvas.create_text(
            674.0,
            232.5,
            anchor="nw",
            text="HÃNG",
            fill="#27292A",
            font=("Segoe UI Semibold", 13 * -1)
        )

        canvas.create_text(
            951.0,
            91.5,
            anchor="nw",
            text="CỔNG",
            fill="#27292A",
            font=("Segoe UI Semibold", 13 * -1)
        )

        canvas.create_text(
            938.0,
            188.0,
            anchor="nw",
            text="GIỜ BAY",
            fill="#27292A",
            font=("Segoe UI Semibold", 13 * -1)
        )

        canvas.create_text(
            190.0,
            90.0,
            anchor="nw",
            text="TÊN KH",
            fill="#27292A",
            font=("Segoe UI Semibold", 13 * -1)
        )

        canvas.create_text(
            217.0,
            138.0,
            anchor="nw",
            text="TỪ ",
            fill="#27292A",
            font=("Segoe UI Semibold", 13 * -1)
        )

        canvas.create_text(
            199.0,
            186.0,
            anchor="nw",
            text="NGÀY",
            fill="#27292A",
            font=("Segoe UI Semibold", 13 * -1)
        )

        canvas.create_text(
            207.0,
            234.0,
            anchor="nw",
            text="GHẾ",
            fill="#27292A",
            font=("Segoe UI Semibold", 13 * -1)
        )

        canvas.create_text(
            432.0,
            138.0,
            anchor="nw",
            text="ĐẾN ",
            fill="#27292A",
            font=("Segoe UI Semibold", 13 * -1)
        )

        canvas.create_text(
            423.0,
            186.0,
            anchor="nw",
            text="NGÀY",
            fill="#27292A",
            font=("Segoe UI Semibold", 13 * -1)
        )

        canvas.create_text(
            402.0,
            234.0,
            anchor="nw",
            text="HÀNH LÝ",
            fill="#27292A",
            font=("Segoe UI Semibold", 13 * -1)
        )

        canvas.create_text(
            927.0,
            141.0,
            anchor="nw",
            text="MỞ CỔNG",
            fill="#27292A",
            font=("Segoe UI Semibold", 13 * -1)
        )

        self.button_image_12 = PhotoImage(
            file=relative_to_assets("button_12.png"))
        button_logout = Button(
            image=self.button_image_12,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_12 clicked"),
            relief="flat"
        )
        button_logout.place(
            x=26.0,
            y=728.0,
            width=98.0,
            height=22.0
        )

        canvas.create_text(
            239.0,
            22.0,
            anchor="nw",
            text="Thông Tin Vé Máy Bay",
            fill="#000000",
            font=("Segoe UI Bold", 30 * -1)
        )

        # canvas.create_rectangle(
        #     168.9987030029297,
        #     364.0,
        #     939.0013275146484,
        #     364.0,
        #     fill="#8d99ae",
        #     outline="")

        canvas.create_line(
            170.0,
            320.0,
            1170.0,
            320.0,
            fill="#8d99ae",
        )

        # ---------------------------------------------------------------------------
        # carrier
        l_carrier = [
            ' Vietnam Airlines (VNA)',
            ' VietJet Air (VJ)',
            ' Pacific Airlines (BL)',
            ' Bamboo Airways (QH)'
        ]
        # self.button_image_2 = PhotoImage(
        #     file=relative_to_assets("button_2.png"))
        combobox_carrier = ttk.Combobox(
            background='white',
            justify='left',
            cursor='hand2',
            foreground='#000000',
            font=("Segoe UI Semibold", 12 * -1),
            values=l_carrier,
        )
        combobox_carrier.place(
            x=720.0,
            y=231.0,
            width=120.0,
            height=22.0
        )
        # ----------------------------------------------------------------------------
        # arrival
        l_ap = airport()

        # self.button_image_9 = PhotoImage(
        #     file=relative_to_assets("button_9.png"))
        combobox_arrival_aiport = ttk.Combobox(
            background='white',
            justify='left',
            cursor='hand2',
            foreground='#000000',
            font=("Segoe UI Semibold", 12 * -1),
            values=l_ap,
        )
        combobox_arrival_aiport.place(
            x=462.0,
            y=137.0,
            width=170.0,
            height=22.0
        )
        # departure
        # self.button_image_11 = PhotoImage(
        #     file=relative_to_assets("button_11.png"))
        combobox_departure_aiport = ttk.Combobox(
            background='white',
            justify='left',
            cursor='hand2',
            foreground='#000000',
            font=("Segoe UI Semibold", 12 * -1),
            values=l_ap,
        )
        combobox_departure_aiport.place(
            x=239.0,
            y=137.0,
            width=170.0,
            height=22.0
        )

        self.image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        canvas.create_image(
            28.0,
            35.0,
            image=self.image_image_3
        )

        # ------------------------------------------------------------------------
        # time picker

        # open gate
        self.button_image_8 = PhotoImage(
            file=relative_to_assets("button_8.png"))
        canvas.create_image(
            1055.0,
            148.0,
            image=self.button_image_8
        )
        entry_time_open_gate = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_time_open_gate.place(
            x=997.0,
            y=137.5,
            width=115.0,
            height=20.0
        )

        # time flight
        self.button_image_9 = PhotoImage(
            file=relative_to_assets("button_9.png"))
        canvas.create_image(
            1055.0,
            195.0,
            image=self.button_image_9
        )
        entry_time_flight = Entry(
            bd=0,
            bg="#FFFFFF",
            fg="#000716",
            highlightthickness=0
        )
        entry_time_flight.place(
            x=997.0,
            y=184.0,
            width=115.0,
            height=20.0
        )
        # -------------------------------------------------------------------------
        # class ticket
        clas_ticket = [
            ' Nhất',
            ' Thương Gia',
            ' Phổ Thông ĐB',
            ' Phổ Thông'
        ]
        # self.button_image_14 = PhotoImage(
        #     file=relative_to_assets("button_10.png"))
        combobox_class = ttk.Combobox(
            background='white',
            justify='center',
            cursor='hand2',
            foreground='#000000',
            font=("Segoe UI Semibold", 12 * -1),
            values=clas_ticket,
        )
        combobox_class.place(
            x=720.0,
            y=137.0,
            width=120.0,
            height=22.0
        )

        # ---------------------------------------------------------------------------------

        # treeview
        frame = Frame(
            canvas,
            borderwidth=0
        )
        frame.place(
            x=170.0,
            y=325.0,
            width=1000,
            height=450
        )

        table = ttk.Treeview(frame, selectmode='browse')
        table['columns'] = ('1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14')
        table['show'] = 'headings'
        table.heading('1', text='STT')
        table.heading('2', text='Vé')
        table.heading('3', text='Hạng Vé')
        table.heading('4', text='Chuyến')
        table.heading('5', text='Hãng')
        table.heading('6', text='Cổng')
        table.heading('7', text='Khách Hàng')
        table.heading('8', text='Từ')
        table.heading('9', text='Đến')
        table.heading('10', text='Ngày')
        table.heading('11', text='Ghế')
        table.heading('12', text='Hành lí')
        table.heading('13', text='Giờ Bay')
        table.heading('14', text='Mở Cổng')

        table.column('#1', stretch=False, minwidth=25, width=30, anchor='c')
        table.column('#2', stretch=False, minwidth=35, width=55, anchor='w')
        table.column('#3', stretch=False, minwidth=50, width=85, anchor='w')
        table.column('#4', stretch=False, minwidth=25, width=65, anchor='w')
        table.column('#5', stretch=False, minwidth=45, width=120, anchor='w')
        table.column('#6', stretch=False, minwidth=25, width=30, anchor='c')
        table.column('#7', stretch=False, minwidth=50, width=152, anchor='w')
        table.column('#8', stretch=False, minwidth=50, width=100, anchor='w')
        table.column('#9', stretch=False, minwidth=50, width=100, anchor='w')
        table.column('#10', stretch=False, minwidth=25, width=75, anchor='c')
        table.column('#11', stretch=False, minwidth=25, width=30, anchor='c')
        table.column('#12', stretch=False, minwidth=25, width=35, anchor='c')
        table.column('#13', stretch=False, minwidth=25, width=60, anchor='c')
        table.column('#14', stretch=False, minwidth=25, width=60, anchor='c')

        table.pack(fill='both', expand=True)

        style = ttk.Style()
        style.theme_use('vista')
        style.configure('Treeview')
        table.tag_configure('oddrow', background='#90e0ef')

        def get_table(list_ticket):
            count = 0
            for row in list_ticket:
                if table.exists(row[0]):
                    table.delete(row[0])
                if count % 2 == 0:
                    table.insert(
                        '',
                        'end',
                        iid=row[0],
                        values=(
                            row[0], row[1], row[2], row[3], row[4], row[5], row[6], row[7], row[8], row[9], row[11],
                            row[12],
                            row[13],
                            row[14]
                        )
                    )
                else:
                    table.insert(
                        '',
                        'end',
                        iid=row[0],
                        values=(
                            row[0], row[1], row[2], row[3], row[4], row[5], row[6], row[7], row[8], row[9], row[11],
                            row[12],
                            row[13],
                            row[14]
                        ),
                        tags=('oddrow',)
                    )
                count += 1

        l_ticket = retrieve_ticket()
        get_table(list_ticket=l_ticket)

        # ------------------------------------------------------------------------------------

        def add_database():
            tiket = Ticket(
                no=entry_no.get(),
                clas=combobox_class.get(),
                num_flight=entry_num_flight.get(),
                carrier=combobox_carrier.get(),
                gate=entry_gate.get(),
                passenger=entry_passenger.get(),
                departure=combobox_departure_aiport.get(),
                arrival=combobox_arrival_aiport.get(),
                day1=button_day1.get_date(),
                day2=button_day2.get_date(),
                seat=entry_seat.get(),
                baggage=entry_baggage.get(),
                time_flight=entry_time_flight.get(),
                open_gate=entry_time_open_gate.get()
            )
            result = add_ticket(tiket)
            if result is not None:
                messagebox.showinfo('Added', 'Successful add to database')

            else:
                messagebox.showerror('Error', 'Failed add to database')

        self.button_image_4 = PhotoImage(
            file=relative_to_assets("button_4.png"))
        button_add = Button(
            image=self.button_image_4,
            borderwidth=0,
            highlightthickness=0,
            command=add_database,
            relief="flat",
            cursor='hand2'
        )
        button_add.place(
            x=550.0,
            y=290.0,
            width=69.0,
            height=22.0
        )

        # ------------------------------------------------------------------------------------------------------
        # làm trống các trường nhập để nhập nội dung mới
        def clear_field():
            entry_no.delete(0, 'end')
            entry_gate.delete(0, 'end')
            entry_seat.delete(0, 'end')
            entry_passenger.delete(0, 'end')
            entry_baggage.delete(0, 'end')
            entry_time_open_gate.delete(0, 'end')
            entry_time_flight.delete(0, 'end')
            entry_num_flight.delete(0, 'end')
            combobox_carrier.delete(0, 'end')
            combobox_class.delete(0, 'end')
            combobox_arrival_aiport.delete(0, 'end')
            combobox_departure_aiport.delete(0, 'end')
            button_day1.delete(0, 'end')
            button_day2.delete(0, 'end')

        self.button_image_3 = PhotoImage(
            file=relative_to_assets("button_3.png"))
        button_clear = Button(
            image=self.button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=clear_field,
            relief="flat",
            cursor='hand2'
        )
        button_clear.place(
            x=700.0,
            y=290.0,
            width=98.0,
            height=22.0
        )

        # ---------------------------------------------------------------
        def refesh_table():
            # delete_table(treeview=table_treeview)
            new_data = retrieve_ticket()
            get_table(list_ticket=new_data)

        self.button_image_15 = PhotoImage(
            file=relative_to_assets("button_15.png"))
        button_refesh = Button(
            image=self.button_image_15,
            borderwidth=0,
            highlightthickness=0,
            command=refesh_table,
            relief="flat",
            cursor='hand2'
        )
        button_refesh.place(
            x=880.0,
            y=290.0,
            width=98.0,
            height=22.0
        )

        # -------------------------------------------------------------------------------------------------------------
        # Tạo hàm và nút tìm kiếm
        def searching_ticket():
            query = []
            obj = Ticket(
                no=entry_no.get(),
                clas=combobox_class.get(),
                num_flight=entry_num_flight.get(),
                carrier=combobox_carrier.get(),
                gate=entry_gate.get(),
                passenger=entry_passenger.get(),
                departure=combobox_departure_aiport.get(),
                arrival=combobox_arrival_aiport.get(),
                day1=button_day1.get_date(),
                day2=button_day2.get_date(),
                seat=entry_seat.get(),
                baggage=entry_baggage.get(),
                time_flight=entry_time_flight.get(),
                open_gate=entry_time_open_gate.get()
            )
            if obj == '':
                query = ''
            else:
                if entry_no.get() != '':
                    query.append(f'no = "{format(entry_no.get())}"')
                if combobox_class.get() != '':
                    query.append(f'class = "{format(combobox_class.get())}"')
                if entry_num_flight.get() != '':
                    query.append(f'num_flight = "{format(entry_num_flight.get())}"')
                if combobox_carrier.get() != '':
                    query.append(f'carrier = "{format(combobox_carrier.get())}"')
                if entry_gate.get() != '':
                    query.append(f'gate = "{format(entry_gate.get())}"')
                if entry_passenger.get() != '':
                    query.append(f'passenger = "{format(entry_passenger.get())}"')
                if combobox_departure_aiport.get() != '':
                    query.append(f'departure = "{format(combobox_departure_aiport.get())}"')
                if combobox_arrival_aiport.get() != '':
                    query.append(f'arrival = "{format(combobox_arrival_aiport.get())}"')
                # if button_day1.get() != '':
                #     query += f' AND day1 = "{format(button_day1.get_date())}"'
                # if button_day2.get() != '':
                #     query += f' AND day2 = "{format(button_day2.get_date())}"'
                if entry_seat.get() != '':
                    query.append(f'seat = "{format(entry_seat.get())}"')
                if entry_baggage.get() != '':
                    query.append(f'baggage = "{format(entry_baggage.get())}"')
                if entry_time_flight.get() != '':
                    query.append(f'time_flight = "{format(entry_time_flight.get())}"')
                if entry_time_open_gate.get() != '':
                    query.append(f'open_gate = "{format(entry_time_open_gate.get())}"')

            sql_query = ''
            for x in query:
                x += ' AND '
                sql_query += x

            fet = searching(sql_query)
            table.delete(*table.get_children())
            table.tag_configure('evenrow', background='#90e0e0')
            count1 = 0
            for row in fet:
                if count1 % 2 == 0:
                    table.insert(
                        '',
                        'end',
                        iid=row[0],
                        values=(
                            row[0], row[1], row[2], row[3], row[4], row[5], row[6], row[7], row[8], row[9], row[11],
                            row[12],
                            row[13],
                            row[14]
                        )
                    )
                    count1 += 1
                else:
                    table.insert(
                        '',
                        'end',
                        iid=row[0],
                        values=(
                            row[0], row[1], row[2], row[3], row[4], row[5], row[6], row[7], row[8], row[9], row[11],
                            row[12],
                            row[13],
                            row[14]
                        ),
                        tags=('evenrow',)
                    )
                    count1 += 1

        self.button_image_16 = PhotoImage(
            file=relative_to_assets("button_16.png"))
        button_refesh = Button(
            image=self.button_image_16,
            borderwidth=0,
            highlightthickness=0,
            command=searching_ticket,
            relief="flat",
            cursor='hand2'
        )
        button_refesh.place(
            x=380.0,
            y=290.0,
            width=98.0,
            height=22.0
        )
        # --------------------------------------------------------------------------------------------------------------
        # chọn row và edit
        # def edit_row():
        selected_item = table.focus()
        row_values = table.item(selected_item).get('value')
        print(row_values)
        # ---------------------------------------------------------------------------------------------------------------


# -------------------------------------------------------------------------------
if __name__ == '__main__':
    window = Tk()
    tk = Home(window)
    window.mainloop()
